
PINCASTER

A persistent nosql database to store geographic data and key/value
pairs, with a HTTP/JSON interface.

Usage :

/SYSTEM:

Ping:
curl http://$HOST:8080/api/1.0/system/ping.json

/LAYERS:

Create a new layer named "tlay":
curl -d'' -XPOST http://$HOST:8080/api/1.0/layers/tlay.json

Delete a layer named "tlay":
curl -d'' -XDELETE http://$HOST:8080/api/1.0/layers/tlay.json

List active layers:
curl http://$HOST:8080/api/1.0/layers/index.json

/RECORDS:

Store/modify a key/value set in a new record named "home" in the
"tlay" layer:
curl -XPUT -d 'description=Maison&who=Robert' http://$HOST:8080/api/1.0/records/tlay/home.json

Retrieve a record:
curl http://$HOST:8080/api/1.0/records/tlay/home.json

Delete a record:
curl -XDELETE http://$HOST:8080/api/1.0/records/tlay/home.json

Atomically create/increment a numerical property called "visits":
curl -XPUT -d '_add_int:visits=1' http://$HOST:8080/api/1.0/records/tlay/home.json

Store/modify a record with geographic data:
curl -XPUT -d '_loc=48.60,2.10&description=Macdo' http://$HOST:8080/api/1.0/records/tlay/macdo.json

Delete a property:
curl -XPUT -d '_delete:visits=1" http://$HOST:8080/api/1.0/records/tlay/home.json

Remove all properties besides geographic data:
curl -XPUT -d '_delete_all=1" http://$HOST:8080/api/1.0/records/tlay/home.json

/LAYERS:

Retrieve records near a point and within a radius:
curl http://$HOST:8080/api/1.0/search/tlay/nearby/48.61,2.14.json?radius=20000

Ditto, without properties:
curl http://$HOST:8080/api/1.0/search/tlay/nearby/48.61,2.14.json?radius=20000\&properties=0

Retrieve records within a 2D-rectangle:
curl http://$HOST:8080/api/1.0/search/tlay/nearby/47.61,1.14,49.62,2.07.json


